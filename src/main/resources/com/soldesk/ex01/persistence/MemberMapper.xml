<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.soldesk.ex01.persistence.MemberMapper">

	<resultMap type="com.soldesk.ex01.domain.MemberVO" id="memberResultMap">
		<id property="memberId" column="MEMBER_ID" />
		<result property="memberPassword" column="MEMBER_PASSWORD" />
		<result property="roleId" column="ROLE_ID" />
		<result property="memberEmail" column="MEMBER_EMAIL" />
		<result property="memberRegistDate" column="MEMBER_REGISTDATE" />
		<result property="memberPropertyAsString" column="MEMBER_PROPERTY" />
		<result property="refreshToken" column="REFRESH_TOKEN" />
	</resultMap>

	<!-- 회원 가입 -->
	<insert id="insert">
		INSERT INTO MEMBER (MEMBER_ID, MEMBER_PASSWORD, ROLE_ID, MEMBER_EMAIL, MEMBER_PROPERTY, MEMBER_REGISTDATE, REFRESH_TOKEN)
		VALUES (#{memberId}, #{memberPassword}, 0, #{memberEmail}, null, SYSDATE, null)
	</insert>
	<!-- 회원 자기정보 보기 -->
	<select id="selectByMemberId" resultMap="memberResultMap"> SELECT * FROM MEMBER	WHERE MEMBER_ID = #{memberId} </select>
	<!-- 회원 리스트 -->
	<select id="selectIdList" resultMap="memberResultMap"> SELECT MEMBER_ID FROM MEMBER </select>
	<!-- 로그인 체크 -->
	<select id="memberCheck" resultMap="memberResultMap"> SELECT MEMBER_PASSWORD, MEMBER_ID FROM MEMBER WHERE MEMBER_ID = #{memberId} </select>
	<!-- 체크 아이디 -->
	<select id="checkId" resultType="String"> SELECT MEMBER_ID FROM MEMBER WHERE MEMBER_ID = #{memberId} </select>
	<!-- 체크 이메일 -->
	<select id="checkEmail" resultType="String"> SELECT MEMBER_ID FROM MEMBER WHERE MEMBER_EMAIL = #{memberEmail} </select>
	<!-- 자동로그인 refreshToken 확인용 -->
	<select id="checkToken" resultType="String"> SELECT REFRESH_TOKEN FROM MEMBER WHERE MEMBER_ID = #{memberId} </select>
	<!-- 로그인시 권한 설정 위한 이름 가져오는 join 사용 쿼리 -->
	<select id="memberRole" resultType="String"> 
	    SELECT r.ROLE_NAME
	    FROM MEMBER m
	    JOIN ROLE r ON m.ROLE_ID = r.ROLE_ID
	    WHERE m.MEMBER_ID = #{memberId}
	</select>

	<!-- 이메일을 이용해 아이디 찾기 -->
	<!-- <select id="findId" resultMap="memberResultMap"> SELECT MEMBER_ID FROM MEMBER WHERE MEMBER_EMAIL = #{memberEmail} </select> -->
	
	<!-- 리프레시 토큰 저장(업데이트) -->
	<update id="updateRefreshToken" >
		UPDATE MEMBER SET
		REFRESH_TOKEN = #{refreshToken}
		WHERE MEMBER_ID = #{memberId}
		
	</update>
	
	<!-- 회원 정보 수정 -->
	<update id="update">
		UPDATE MEMBER SET
		MEMBER_EMAIL = #{memberEmail},
		MEMBER_PASSWORD = #{memberPassword}
		WHERE MEMBER_ID = #{memberId}
	</update>
	<!-- 비밀번호 변경 -->
	<update id="updatePassword">
		UPDATE MEMBER SET
		MEMBER_PASSWORD = #{memberPassword}
		WHERE MEMBER_ID = #{memberId} 
	</update>
	<!-- 이메일 변경 -->
	<update id="updateEmail">
		UPDATE MEMBER SET
		MEMBER_EMAIL = #{memberEmail}
		WHERE MEMBER_ID = #{memberId}
	</update>
	<!-- 회원 자산 수정 -->
	<update id="updateProperty">
		UPDATE MEMBER SET
		MEMBER_PROPERTY = #{memberPropertyAsString}
		WHERE MEMBER_ID = #{memberId}
	</update>
	<!-- 회원 관리자 자격 수정 -->
	<update id="updateRole">
		UPDATE MEMBER SET
		ROLE_ID = #{roleId}
		WHERE MEMBER_ID = #{memberId}
	</update>
	<!-- 회원 삭제(탈퇴) -->
	<delete id="delete"> DELETE FROM MEMBER WHERE MEMBER_ID = #{memberId}
	</delete>
</mapper>