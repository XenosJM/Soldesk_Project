<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.soldesk.ex01.persistence.RequestMapper">

<resultMap type="com.soldesk.ex01.domain.RequestVO"
		id="requestResultMap">
		<id property="requestId" column="REQUEST_ID" />
		<result property="memberId" column="MEMBER_ID" />
		<result property="receiverId" column="RECEIVER_ID" />
		<result property="requestState" column="REQUEST_STATE" />
		<result property="requestSendDate" column="REQUEST_SENDDATE" />
	</resultMap>
	
	 <!-- 친구 요청 삽입 -->
    <insert id="insertRequest">
        INSERT INTO REQUEST (REQUEST_ID, MEMBER_ID, RECEIVER_ID, REQUEST_STATE, REQUEST_SENDDATE)
        VALUES (REQUEST_SEQ.NEXTVAL, #{memberId}, #{receiverId}, null, SYSDATE)
    </insert>

    <!-- 특정 회원이 보낸 친구 요청 목록 조회 -->
    <select id="sendListRequest" resultMap="requestResultMap">
        SELECT * FROM REQUEST WHERE MEMBER_ID = #{memberId}
    </select>
    
    <!-- 친구요청 보낸 사용자가 requestId값을 알게 하기위한 쿼리 -->
    <select id="selectByReceiverId" resultMap="requestResultMap">
    	SELECT * FROM REQUEST WHERE RECEIVER_ID = #{receiverId}
    </select>
    
    <!-- 친구요청 보낸 사용자가 requesterId값을 알게 하기위한 쿼리 -->
    <select id="selectByRequestId" resultMap="requestResultMap">
    	SELECT * FROM REQUEST WHERE REQUEST_ID = #{requestId}
    </select>
    
   <!-- 친구 요청 존재여부 조회 -->
	<select id="selectRequestByReceiverId" resultType="Integer">
	    SELECT COUNT(RECEIVER_ID)
	    FROM REQUEST
	    WHERE RECEIVER_ID = #{receiverId} AND MEMBER_ID = #{memberId}
	</select>
    
    <!-- 스케쥴링으로 기준 시간이 지난 요청 삭제 -->
    <select id="allSendList" resultMap="requestResultMap">
        SELECT REQUEST_ID, REQUEST_STATE, REQUEST_SENDDATE FROM REQUEST
    </select>

    <!-- 친구 요청 상태 변경 -->
    <update id="requestStateChange">
        UPDATE REQUEST SET 
        REQUEST_STATE = #{requestState}
        WHERE REQUEST_ID = #{requestId}
    </update>

    <!-- 친구 요청 취소 -->
    <delete id="cancelRequest">
        DELETE FROM REQUEST WHERE REQUEST_ID = #{requestId}
    </delete>
</mapper>